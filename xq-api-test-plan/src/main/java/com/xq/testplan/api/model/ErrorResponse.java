/*
 * TestPlan microservice
 * TestPlan microservice api documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: service.testplan@xq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xq.testplan.api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.xq.testplan.api.invoker.ApiClient;
/**
 * ErrorResponse
 */
@JsonPropertyOrder({
  ErrorResponse.JSON_PROPERTY_API_PATH,
  ErrorResponse.JSON_PROPERTY_ERROR_CODE,
  ErrorResponse.JSON_PROPERTY_ERROR_MESSAGE,
  ErrorResponse.JSON_PROPERTY_ERROR_TIME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-30T17:26:38.637157+07:00[Asia/Ho_Chi_Minh]", comments = "Generator version: 7.12.0")
public class ErrorResponse {
  public static final String JSON_PROPERTY_API_PATH = "apiPath";
  @javax.annotation.Nullable
  private String apiPath;

  /**
   * Gets or Sets errorCode
   */
  public enum ErrorCodeEnum {
    _100_CONTINUE(String.valueOf("100 CONTINUE")),
    
    _101_SWITCHING_PROTOCOLS(String.valueOf("101 SWITCHING_PROTOCOLS")),
    
    _102_PROCESSING(String.valueOf("102 PROCESSING")),
    
    _103_EARLY_HINTS(String.valueOf("103 EARLY_HINTS")),
    
    _103_CHECKPOINT(String.valueOf("103 CHECKPOINT")),
    
    _200_OK(String.valueOf("200 OK")),
    
    _201_CREATED(String.valueOf("201 CREATED")),
    
    _202_ACCEPTED(String.valueOf("202 ACCEPTED")),
    
    _203_NON_AUTHORITATIVE_INFORMATION(String.valueOf("203 NON_AUTHORITATIVE_INFORMATION")),
    
    _204_NO_CONTENT(String.valueOf("204 NO_CONTENT")),
    
    _205_RESET_CONTENT(String.valueOf("205 RESET_CONTENT")),
    
    _206_PARTIAL_CONTENT(String.valueOf("206 PARTIAL_CONTENT")),
    
    _207_MULTI_STATUS(String.valueOf("207 MULTI_STATUS")),
    
    _208_ALREADY_REPORTED(String.valueOf("208 ALREADY_REPORTED")),
    
    _226_IM_USED(String.valueOf("226 IM_USED")),
    
    _300_MULTIPLE_CHOICES(String.valueOf("300 MULTIPLE_CHOICES")),
    
    _301_MOVED_PERMANENTLY(String.valueOf("301 MOVED_PERMANENTLY")),
    
    _302_FOUND(String.valueOf("302 FOUND")),
    
    _302_MOVED_TEMPORARILY(String.valueOf("302 MOVED_TEMPORARILY")),
    
    _303_SEE_OTHER(String.valueOf("303 SEE_OTHER")),
    
    _304_NOT_MODIFIED(String.valueOf("304 NOT_MODIFIED")),
    
    _305_USE_PROXY(String.valueOf("305 USE_PROXY")),
    
    _307_TEMPORARY_REDIRECT(String.valueOf("307 TEMPORARY_REDIRECT")),
    
    _308_PERMANENT_REDIRECT(String.valueOf("308 PERMANENT_REDIRECT")),
    
    _400_BAD_REQUEST(String.valueOf("400 BAD_REQUEST")),
    
    _401_UNAUTHORIZED(String.valueOf("401 UNAUTHORIZED")),
    
    _402_PAYMENT_REQUIRED(String.valueOf("402 PAYMENT_REQUIRED")),
    
    _403_FORBIDDEN(String.valueOf("403 FORBIDDEN")),
    
    _404_NOT_FOUND(String.valueOf("404 NOT_FOUND")),
    
    _405_METHOD_NOT_ALLOWED(String.valueOf("405 METHOD_NOT_ALLOWED")),
    
    _406_NOT_ACCEPTABLE(String.valueOf("406 NOT_ACCEPTABLE")),
    
    _407_PROXY_AUTHENTICATION_REQUIRED(String.valueOf("407 PROXY_AUTHENTICATION_REQUIRED")),
    
    _408_REQUEST_TIMEOUT(String.valueOf("408 REQUEST_TIMEOUT")),
    
    _409_CONFLICT(String.valueOf("409 CONFLICT")),
    
    _410_GONE(String.valueOf("410 GONE")),
    
    _411_LENGTH_REQUIRED(String.valueOf("411 LENGTH_REQUIRED")),
    
    _412_PRECONDITION_FAILED(String.valueOf("412 PRECONDITION_FAILED")),
    
    _413_PAYLOAD_TOO_LARGE(String.valueOf("413 PAYLOAD_TOO_LARGE")),
    
    _413_REQUEST_ENTITY_TOO_LARGE(String.valueOf("413 REQUEST_ENTITY_TOO_LARGE")),
    
    _414_URI_TOO_LONG(String.valueOf("414 URI_TOO_LONG")),
    
    _414_REQUEST_URI_TOO_LONG(String.valueOf("414 REQUEST_URI_TOO_LONG")),
    
    _415_UNSUPPORTED_MEDIA_TYPE(String.valueOf("415 UNSUPPORTED_MEDIA_TYPE")),
    
    _416_REQUESTED_RANGE_NOT_SATISFIABLE(String.valueOf("416 REQUESTED_RANGE_NOT_SATISFIABLE")),
    
    _417_EXPECTATION_FAILED(String.valueOf("417 EXPECTATION_FAILED")),
    
    _418_I_AM_A_TEAPOT(String.valueOf("418 I_AM_A_TEAPOT")),
    
    _419_INSUFFICIENT_SPACE_ON_RESOURCE(String.valueOf("419 INSUFFICIENT_SPACE_ON_RESOURCE")),
    
    _420_METHOD_FAILURE(String.valueOf("420 METHOD_FAILURE")),
    
    _421_DESTINATION_LOCKED(String.valueOf("421 DESTINATION_LOCKED")),
    
    _422_UNPROCESSABLE_ENTITY(String.valueOf("422 UNPROCESSABLE_ENTITY")),
    
    _423_LOCKED(String.valueOf("423 LOCKED")),
    
    _424_FAILED_DEPENDENCY(String.valueOf("424 FAILED_DEPENDENCY")),
    
    _425_TOO_EARLY(String.valueOf("425 TOO_EARLY")),
    
    _426_UPGRADE_REQUIRED(String.valueOf("426 UPGRADE_REQUIRED")),
    
    _428_PRECONDITION_REQUIRED(String.valueOf("428 PRECONDITION_REQUIRED")),
    
    _429_TOO_MANY_REQUESTS(String.valueOf("429 TOO_MANY_REQUESTS")),
    
    _431_REQUEST_HEADER_FIELDS_TOO_LARGE(String.valueOf("431 REQUEST_HEADER_FIELDS_TOO_LARGE")),
    
    _451_UNAVAILABLE_FOR_LEGAL_REASONS(String.valueOf("451 UNAVAILABLE_FOR_LEGAL_REASONS")),
    
    _500_INTERNAL_SERVER_ERROR(String.valueOf("500 INTERNAL_SERVER_ERROR")),
    
    _501_NOT_IMPLEMENTED(String.valueOf("501 NOT_IMPLEMENTED")),
    
    _502_BAD_GATEWAY(String.valueOf("502 BAD_GATEWAY")),
    
    _503_SERVICE_UNAVAILABLE(String.valueOf("503 SERVICE_UNAVAILABLE")),
    
    _504_GATEWAY_TIMEOUT(String.valueOf("504 GATEWAY_TIMEOUT")),
    
    _505_HTTP_VERSION_NOT_SUPPORTED(String.valueOf("505 HTTP_VERSION_NOT_SUPPORTED")),
    
    _506_VARIANT_ALSO_NEGOTIATES(String.valueOf("506 VARIANT_ALSO_NEGOTIATES")),
    
    _507_INSUFFICIENT_STORAGE(String.valueOf("507 INSUFFICIENT_STORAGE")),
    
    _508_LOOP_DETECTED(String.valueOf("508 LOOP_DETECTED")),
    
    _509_BANDWIDTH_LIMIT_EXCEEDED(String.valueOf("509 BANDWIDTH_LIMIT_EXCEEDED")),
    
    _510_NOT_EXTENDED(String.valueOf("510 NOT_EXTENDED")),
    
    _511_NETWORK_AUTHENTICATION_REQUIRED(String.valueOf("511 NETWORK_AUTHENTICATION_REQUIRED"));

    private String value;

    ErrorCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ErrorCodeEnum fromValue(String value) {
      for (ErrorCodeEnum b : ErrorCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ERROR_CODE = "errorCode";
  @javax.annotation.Nullable
  private ErrorCodeEnum errorCode;

  public static final String JSON_PROPERTY_ERROR_MESSAGE = "errorMessage";
  @javax.annotation.Nullable
  private String errorMessage;

  public static final String JSON_PROPERTY_ERROR_TIME = "errorTime";
  @javax.annotation.Nullable
  private Date errorTime;

  public ErrorResponse() { 
  }

  public ErrorResponse apiPath(@javax.annotation.Nullable String apiPath) {
    this.apiPath = apiPath;
    return this;
  }

  /**
   * Get apiPath
   * @return apiPath
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_API_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getApiPath() {
    return apiPath;
  }


  @JsonProperty(JSON_PROPERTY_API_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApiPath(@javax.annotation.Nullable String apiPath) {
    this.apiPath = apiPath;
  }


  public ErrorResponse errorCode(@javax.annotation.Nullable ErrorCodeEnum errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * Get errorCode
   * @return errorCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ErrorCodeEnum getErrorCode() {
    return errorCode;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorCode(@javax.annotation.Nullable ErrorCodeEnum errorCode) {
    this.errorCode = errorCode;
  }


  public ErrorResponse errorMessage(@javax.annotation.Nullable String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * Error message returned from implementation logic
   * @return errorMessage
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getErrorMessage() {
    return errorMessage;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorMessage(@javax.annotation.Nullable String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public ErrorResponse errorTime(@javax.annotation.Nullable Date errorTime) {
    this.errorTime = errorTime;
    return this;
  }

  /**
   * Date time when error occur
   * @return errorTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Date getErrorTime() {
    return errorTime;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorTime(@javax.annotation.Nullable Date errorTime) {
    this.errorTime = errorTime;
  }


  /**
   * Return true if this ErrorResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ErrorResponse errorResponse = (ErrorResponse) o;
    return Objects.equals(this.apiPath, errorResponse.apiPath) &&
        Objects.equals(this.errorCode, errorResponse.errorCode) &&
        Objects.equals(this.errorMessage, errorResponse.errorMessage) &&
        Objects.equals(this.errorTime, errorResponse.errorTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiPath, errorCode, errorMessage, errorTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ErrorResponse {\n");
    sb.append("    apiPath: ").append(toIndentedString(apiPath)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    errorTime: ").append(toIndentedString(errorTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `apiPath` to the URL query string
    if (getApiPath() != null) {
      joiner.add(String.format("%sapiPath%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getApiPath()))));
    }

    // add `errorCode` to the URL query string
    if (getErrorCode() != null) {
      joiner.add(String.format("%serrorCode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getErrorCode()))));
    }

    // add `errorMessage` to the URL query string
    if (getErrorMessage() != null) {
      joiner.add(String.format("%serrorMessage%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getErrorMessage()))));
    }

    // add `errorTime` to the URL query string
    if (getErrorTime() != null) {
      joiner.add(String.format("%serrorTime%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getErrorTime()))));
    }

    return joiner.toString();
  }
}

